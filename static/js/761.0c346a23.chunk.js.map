{"version":3,"file":"static/js/761.0c346a23.chunk.js","mappings":"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","sources":["components/AppBar/AppBar.jsx","components/Loader/Loader.jsx","components/FormSearchVin/FormSearchVin.jsx","components/VinList/VinList.jsx","pages/General/General.jsx","services/getSearchVin.jsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\n\nconst navItems = [\n    { href: '/', text: 'General' },\n    { href: '/variables', text: 'Variables' },\n  ];\n  \n  const AppBar = () => {\n      return (\n          <header>\n              <ul>\n                  {navItems.map(({ href, text }) => {\n                      if(href.includes(\"/variables\")) {\n                          return (\n                              <li key={href}>\n                                  <NavLink to={href}>{text}</NavLink>\n                              </li>\n                          )\n                      }    \n  \n                      return (\n                          <li key={href}>\n                              <NavLink to={href} end>{text}</NavLink>\n                          </li>\n                      )\n                  })}\n              </ul>\n          </header>\n      )\n  }\n  \n  export default AppBar;","import { MagnifyingGlass } from  'react-loader-spinner';\n\nconst Loader = () => {\n    return (    \n        <div>\n        <MagnifyingGlass \n            visible={true} \n            height=\"100\" \n            width=\"100\"\n            color='black'\n        />\n        </div>\n    )\n}\n\nexport default Loader;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst FormSearchVin = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  const handleSearchQuery = e => {\n    setSearchQuery(e.currentTarget.value.toLowerCase().trim());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    \n    const validationQuery = searchQuery.trim();\n    if (validationQuery === '') {\n      toast.error('Please enter a VIN code!');\n      return;\n    } else if (validationQuery.length < 17) {\n      toast.error('Please enter 17 character code');\n      return;\n    }\n\n    onSubmit(searchQuery);\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Enter VIN\"\n          onChange={handleSearchQuery}\n          name=\"searchQuery\"\n          value={searchQuery}\n          // pattern= \"/[^a-zA-Z0-9]/\"\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </>\n  );\n};\n\nFormSearchVin.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default FormSearchVin;\n","import PropTypes from 'prop-types';\n\nconst VinList = ({ items }) => {\n  const item = items.data.Results;\n\n  return (\n    <ul>\n      {item.map(\n        ({ Value, Variable, VariableId }) =>\n          Value !== null &&\n          Value !== '' &&\n          Value !== '0' && (\n            <li key={VariableId}>\n              <p>\n                {Value} : {Variable}\n              </p>\n            </li>\n          )\n      )}\n    </ul>\n  );\n};\n\nVinList.propTypes = {\n  items: PropTypes.object.isRequired,\n};\n\nexport default VinList;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport AppBar from 'components/AppBar/AppBar';\nimport FormSearchVin from 'components/FormSearchVin/FormSearchVin';\nimport VinList from 'components/VinList/VinList';\nimport Loader from 'components/Loader/Loader';\nimport { getSearchVin } from 'services/getSearchVin';\n\n\nconst GeneralPage = () => {\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const vin = searchParams.get('vin');\n\n  const onChangeQuery = vin => {\n    setSearchParams({ vin: vin });\n    setItems([]);\n  };\n\n  useEffect(() => {\n    const getSearchQuery = async () => {\n      if (!vin) {\n        return;\n      }\n      setIsLoading(true);\n\n      try {\n        const data = await getSearchVin({ vin });\n        setItems(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getSearchQuery();\n  }, [vin]);\n\n  return (\n    <>\n      <AppBar />\n      <FormSearchVin onSubmit={onChangeQuery} />\n      {items.length !== 0 && (\n      <div><VinList items={items} /></div>\n      )}\n      {isLoading && <Loader />}\n      {error && <p>Please try again later!</p>}\n    </>\n  );\n};\n\nexport default GeneralPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://vpic.nhtsa.dot.gov/api';\n\nexport const getSearchVin = async ({ vin = '' }) => {\n  const result = await axios.get(\n    `${BASE_URL}/vehicles/decodevin/${vin}?format=json`\n  );\n  return result;\n};\n\nexport const getSearchVariablesList = async () => {\n  const result = await axios.get(\n    `${BASE_URL}/vehicles/getvehiclevariablelist?format=json`\n  );\n  return result;\n};\n\nexport const getVariableDescription = async({variableId} ) => {\n  const result = await axios.get(`https://vpic.nhtsa.dot.gov/api/vehicles/getvehiclevariablevalueslist/${variableId}?format=json`);\n  return result;\n};\n"],"names":["navItems","href","text","map","includes","to","end","visible","height","width","color","onSubmit","useState","searchQuery","setSearchQuery","resetForm","e","preventDefault","validationQuery","trim","length","toast","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","name","item","items","data","Results","Value","Variable","VariableId","setItems","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","vin","get","useEffect","getSearchQuery","getSearchVin","AppBar","Loader","BASE_URL","axios","result","getSearchVariablesList","getVariableDescription","variableId"],"sourceRoot":""}