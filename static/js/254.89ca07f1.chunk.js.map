{"version":3,"file":"static/js/254.89ca07f1.chunk.js","mappings":"mKAGMA,EAAW,CACf,CAAEC,KAAM,IAAKC,KAAM,WACnB,CAAED,KAAM,aAAcC,KAAM,cA+B9B,EA5Be,WACb,OACE,mBAAQC,UAAU,SAAlB,UACE,eAAIA,UAAU,WAAd,SACGH,EAASI,KAAI,YAAqB,IAAlBH,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACrB,OAAID,EAAKI,SAAS,eAEd,eAAeF,UAAU,iBAAzB,UACE,SAAC,KAAD,CAASG,GAAIL,EAAME,UAAU,iBAA7B,SACGD,KAFID,IASX,eAAeE,UAAU,iBAAzB,UACE,SAAC,KAAD,CAASG,GAAIL,EAAME,UAAU,iBAAiBI,KAAG,EAAjD,SACGL,KAFID,EAMZ,OAIR,C,4ECvBD,EARe,WACb,OACE,gBAAKE,UAAU,SAAf,UACE,SAAC,KAAD,CAAiBK,SAAS,EAAMC,OAAO,MAAMC,MAAM,MAAMC,MAAM,WAGpE,C,gKCiBD,EAtBsB,SAAC,GAAe,IAC9BC,EAD6B,EAAZC,MACJC,KAAKC,QAClBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAId,UAAU,iBAAd,SACGS,EAAKR,KAAI,gBAAGc,EAAH,EAAGA,KAAMC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,GAAtB,OACR,gBAAajB,UAAU,uBAAvB,WACE,SAAC,KAAD,CAASA,UAAU,uBAAuBkB,MAAO,CAAEC,KAAMN,GAAYV,GAAE,qBAAgBc,GAAvF,UACE,eAAIjB,UAAU,WAAd,SAA0Be,OAE5B,eAAGf,UAAU,kBAAb,cAAiCgB,EAAjC,SAJOC,EADD,KAUf,E,SCgBD,EA9BsB,WACpB,OAA0BG,EAAAA,EAAAA,UAAS,IAAnC,eAAOV,EAAP,KAAcW,EAAd,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,2FACzBJ,GAAa,GADY,mBAGJK,EAAAA,EAAAA,MAHI,OAGjBjB,EAHiB,OAIvBU,EAASV,GAJc,gDAMvBc,EAAS,EAAD,IANe,yBAQvBF,GAAa,GARU,4EAAH,qDAWxBI,GACD,GAAE,KAGD,iCACE,SAACE,EAAA,EAAD,IACCP,IAAa,SAACQ,EAAA,EAAD,IACI,IAAjBpB,EAAMqB,SAAgB,SAAC,EAAD,CAAerB,MAAOA,IAC5Cc,IAAS,qDAGf,C,+IChCKQ,EAAW,iCAEJC,EAAY,mCAAG,oGAASC,IAAAA,OAAT,MAAe,GAAf,WACLC,EAAAA,EAAAA,IAAA,UAChBH,EADgB,+BACeE,EADf,iBADK,cACpBE,EADoB,yBAInBA,GAJmB,2CAAH,sDAOZR,EAAsB,mCAAG,oGACfO,EAAAA,EAAAA,IAAA,UAChBH,EADgB,iDADe,cAC9BI,EAD8B,yBAI7BA,GAJ6B,2CAAH,qDAOtBC,EAAsB,mCAAG,8FAASC,EAAT,EAASA,WAAT,SACfH,EAAAA,EAAAA,IAAA,+EACqDG,EADrD,iBADe,cAC9BF,EAD8B,yBAI7BA,GAJ6B,2CAAH,qD","sources":["components/AppBar/AppBar.jsx","components/Loader/Loader.jsx","components/VariablesList/VariablesList.jsx","pages/Variables/Variables.jsx","services/getSearchVin.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport '../AppBar/AppBar.css';\n\nconst navItems = [\n  { href: '/', text: 'General' },\n  { href: '/variables', text: 'Variables' },\n];\n\nconst AppBar = () => {\n  return (\n    <header className=\"header\">\n      <ul className=\"nav-list\">\n        {navItems.map(({ href, text }) => {\n          if (href.includes('/variables')) {\n            return (\n              <li key={href} className=\"nav-list__item\">\n                <NavLink to={href} className=\"nav-list__link\">\n                  {text}\n                </NavLink>\n              </li>\n            );\n          }\n\n          return (\n            <li key={href} className=\"nav-list__item\">\n              <NavLink to={href} className=\"nav-list__link\" end>\n                {text}\n              </NavLink>\n            </li>\n          );\n        })}\n      </ul>\n    </header>\n  );\n};\n\nexport default AppBar;\n","import { MagnifyingGlass } from 'react-loader-spinner';\nimport '../Loader/Loader.css';\n\nconst Loader = () => {\n  return (\n    <div className='loader'>\n      <MagnifyingGlass visible={true} height=\"100\" width=\"100\" color=\"black\" />\n    </div>\n  );\n};\n\nexport default Loader;","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport '../VariablesList/VariablesList.css'\nconst VariablesList = ({ items }) => {\n  const item = items.data.Results;\n  const location = useLocation();\n\n  return (\n    <ul className='variables-list'>\n      {item.map(({ Name, Description, ID }) => (\n        <li key={ID} className='variables-list__item'>\n          <NavLink className='variables-list__link' state={{ from: location }} to={`/variables/${ID}`}>\n            <h3 className='name-var'>{Name}</h3>\n          </NavLink>\n          <p className='description-var'> {Description} </p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nVariablesList.propTypes = {\n  items: PropTypes.object.isRequired,\n};\n\nexport default VariablesList;\n","import { useState, useEffect } from 'react';\nimport AppBar from 'components/AppBar/AppBar';\nimport Loader from 'components/Loader/Loader';\nimport VariablesList from 'components/VariablesList/VariablesList';\nimport { getSearchVariablesList } from 'services/getSearchVin';\n\nconst VariablesPage = () => {\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchVariablesList = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getSearchVariablesList();\n        setItems(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchVariablesList();\n  }, []);\n\n  return (\n    <>\n      <AppBar />\n      {isLoading && <Loader />}\n      {items.length !== 0 && <VariablesList items={items} />}\n      {error && <p>Please try again later!</p>}\n    </>\n  );\n};\n\nexport default VariablesPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://vpic.nhtsa.dot.gov/api';\n\nexport const getSearchVin = async ({ vin = '' }) => {\n  const result = await axios.get(\n    `${BASE_URL}/vehicles/decodevin/${vin}?format=json`\n  );\n  return result;\n};\n\nexport const getSearchVariablesList = async () => {\n  const result = await axios.get(\n    `${BASE_URL}/vehicles/getvehiclevariablelist?format=json`\n  );\n  return result;\n};\n\nexport const getVariableDescription = async ({ variableId }) => {\n  const result = await axios.get(\n    `https://vpic.nhtsa.dot.gov/api/vehicles/getvehiclevariablevalueslist/${variableId}?format=json`\n  );\n  return result;\n};\n"],"names":["navItems","href","text","className","map","includes","to","end","visible","height","width","color","item","items","data","Results","location","useLocation","Name","Description","ID","state","from","useState","setItems","isLoading","setIsLoading","error","setError","useEffect","fetchVariablesList","getSearchVariablesList","AppBar","Loader","length","BASE_URL","getSearchVin","vin","axios","result","getVariableDescription","variableId"],"sourceRoot":""}