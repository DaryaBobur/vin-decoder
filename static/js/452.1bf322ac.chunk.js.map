{"version":3,"file":"static/js/452.1bf322ac.chunk.js","mappings":"mKAGMA,EAAW,CACf,CAAEC,KAAM,IAAKC,KAAM,WACnB,CAAED,KAAM,aAAcC,KAAM,cA+B9B,EA5Be,WACb,OACE,mBAAQC,UAAU,SAAlB,UACE,eAAIA,UAAU,WAAd,SACGH,EAASI,KAAI,YAAqB,IAAlBH,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACrB,OAAID,EAAKI,SAAS,eAEd,eAAeF,UAAU,iBAAzB,UACE,SAAC,KAAD,CAASG,GAAIL,EAAME,UAAU,iBAA7B,SACGD,KAFID,IASX,eAAeE,UAAU,iBAAzB,UACE,SAAC,KAAD,CAASG,GAAIL,EAAME,UAAU,iBAAiBI,KAAG,EAAjD,SACGL,KAFID,EAMZ,OAIR,C,4ECvBD,EARe,WACb,OACE,gBAAKE,UAAU,SAAf,UACE,SAAC,KAAD,CAAiBK,SAAS,EAAMC,OAAO,MAAMC,MAAM,MAAMC,MAAM,WAGpE,C,wJCqBD,EA3BuB,SAAC,GAAe,IAC/BC,EAD8B,EAAZC,MACLC,KAAKC,QAExB,OAAoB,IAAhBH,EAAKI,QACA,cAAGb,UAAU,OAAb,0BAIP,iCACE,eAAIA,UAAU,QAAd,0BACA,eAAIA,UAAU,aAAd,SACGS,EAAKR,KAAI,gBAAGa,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,KAAhB,OACR,eAAIf,UAAU,mBAAd,UACE,yBACGc,EADH,MACmBC,MAFiBA,EAD9B,QAUjB,E,gBCqCD,EAnD4B,WAAO,IAAD,IAChC,GAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEQC,GAAeC,EAAAA,EAAAA,MAAfD,WACFE,GAAWC,EAAAA,EAAAA,MAEXC,EAAI,qBADOC,EAAAA,EAAAA,MACKC,aAAZ,aAAG,EAAgBF,YAAnB,QAA2B,cAErCG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAwB,mCAAG,uFAC1BR,EAD0B,wDAK/BD,GAAa,GALkB,mBAQVU,EAAAA,EAAAA,IAAuB,CAAET,WAAAA,IARf,OAQvBZ,EARuB,OAS7BO,EAAYP,GATiB,kDAW7BS,EAAS,EAAD,IAXqB,yBAa7BE,GAAa,GAbgB,6EAAH,qDAiB9BS,GACD,GAAE,CAACR,IAIJ,OACE,iCACE,SAACU,EAAA,EAAD,IACChB,IACC,oBAAQjB,UAAU,WAAWkC,KAAK,SAASC,QANlC,kBAAMV,EAASE,EAAf,EAMT,WACE,SAAC,MAAD,CAAYS,SAAU,KADxB,cAIDnB,IAAY,SAAC,EAAD,CAAeP,MAAOO,IAClCI,IAAa,SAACgB,EAAA,EAAD,IACblB,IAAS,oDACV,SAAC,EAAAmB,SAAD,CAAUC,UAAU,SAACF,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C,+ICzDKG,EAAW,iCAEJC,EAAY,mCAAG,oGAASC,IAAAA,OAAT,MAAe,GAAf,WACLC,EAAAA,EAAAA,IAAA,UAChBH,EADgB,+BACeE,EADf,iBADK,cACpBE,EADoB,yBAInBA,GAJmB,2CAAH,sDAOZC,EAAsB,mCAAG,oGACfF,EAAAA,EAAAA,IAAA,UAChBH,EADgB,iDADe,cAC9BI,EAD8B,yBAI7BA,GAJ6B,2CAAH,qDAOtBZ,EAAsB,mCAAG,8FAAST,EAAT,EAASA,WAAT,SACfoB,EAAAA,EAAAA,IAAA,UAChBH,EADgB,kDACkCjB,EADlC,iBADe,cAC9BqB,EAD8B,yBAI7BA,GAJ6B,2CAAH,qD","sources":["components/AppBar/AppBar.jsx","components/Loader/Loader.jsx","components/VariablesList/VariableValue/VariableValue.jsx","pages/VariableDescription/VariableDescription.jsx","services/getSearchVin.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport '../AppBar/AppBar.css';\n\nconst navItems = [\n  { href: '/', text: 'General' },\n  { href: '/variables', text: 'Variables' },\n];\n\nconst AppBar = () => {\n  return (\n    <header className=\"header\">\n      <ul className=\"nav-list\">\n        {navItems.map(({ href, text }) => {\n          if (href.includes('/variables')) {\n            return (\n              <li key={href} className=\"nav-list__item\">\n                <NavLink to={href} className=\"nav-list__link\">\n                  {text}\n                </NavLink>\n              </li>\n            );\n          }\n\n          return (\n            <li key={href} className=\"nav-list__item\">\n              <NavLink to={href} className=\"nav-list__link\" end>\n                {text}\n              </NavLink>\n            </li>\n          );\n        })}\n      </ul>\n    </header>\n  );\n};\n\nexport default AppBar;\n","import { MagnifyingGlass } from 'react-loader-spinner';\nimport '../Loader/Loader.css';\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <MagnifyingGlass visible={true} height=\"100\" width=\"100\" color=\"black\" />\n    </div>\n  );\n};\n\nexport default Loader;\n","import PropTypes from 'prop-types';\nimport './VariableValue.css';\n\nconst VariablesValue = ({ items }) => {\n  const item = items.data.Results;\n\n  if (item.length === 0) {\n    return <p className=\"text\">No details!</p>;\n  }\n\n  return (\n    <>\n      <h2 className=\"title\">All values:</h2>\n      <ul className=\"value-list\">\n        {item.map(({ ElementName, Name }) => (\n          <li className=\"value-list__item\" key={Name}>\n            <p>\n              {ElementName} - {Name}\n            </p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nVariablesValue.propTypes = {\n  items: PropTypes.object.isRequired,\n};\n\nexport default VariablesValue;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useLocation, useNavigate } from 'react-router-dom';\n\nimport AppBar from 'components/AppBar/AppBar';\nimport Loader from 'components/Loader/Loader';\nimport VariableValue from 'components/VariablesList/VariableValue/VariableValue';\nimport { getVariableDescription } from 'services/getSearchVin';\nimport { FcPrevious } from 'react-icons/fc';\nimport '../VariableDescription/VariableDescription.css';\n\nconst VariableDescription = () => {\n  const [variable, setVariable] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { variableId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from ?? '/variables';\n\n  useEffect(() => {\n    const fetchVariableDescription = async () => {\n      if (!variableId) {\n        return;\n      }\n\n      setIsLoading(true);\n\n      try {\n        const data = await getVariableDescription({ variableId });\n        setVariable(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchVariableDescription();\n  }, [variableId]);\n\n  const goBack = () => navigate(from);\n\n  return (\n    <>\n      <AppBar />\n      {variable && (\n        <button className=\"btn-back\" type=\"button\" onClick={goBack}>\n          <FcPrevious fontSize={16} /> go back\n        </button>\n      )}\n      {variable && <VariableValue items={variable} />}\n      {isLoading && <Loader />}\n      {error && <p>Please try again later!</p>}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default VariableDescription;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://vpic.nhtsa.dot.gov/api';\n\nexport const getSearchVin = async ({ vin = '' }) => {\n  const result = await axios.get(\n    `${BASE_URL}/vehicles/decodevin/${vin}?format=json`\n  );\n  return result;\n};\n\nexport const getSearchVariablesList = async () => {\n  const result = await axios.get(\n    `${BASE_URL}/vehicles/getvehiclevariablelist?format=json`\n  );\n  return result;\n};\n\nexport const getVariableDescription = async ({ variableId }) => {\n  const result = await axios.get(\n    `${BASE_URL}/vehicles/getvehiclevariablevalueslist/${variableId}?format=json`\n  );\n  return result;\n};"],"names":["navItems","href","text","className","map","includes","to","end","visible","height","width","color","item","items","data","Results","length","ElementName","Name","useState","variable","setVariable","error","setError","isLoading","setIsLoading","variableId","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchVariableDescription","getVariableDescription","AppBar","type","onClick","fontSize","Loader","Suspense","fallback","BASE_URL","getSearchVin","vin","axios","result","getSearchVariablesList"],"sourceRoot":""}