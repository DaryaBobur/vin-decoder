{"version":3,"file":"static/js/926.e31a9531.chunk.js","mappings":"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","sources":["components/AppBar/AppBar.jsx","components/Loader/Loader.jsx","../node_modules/nanoid/index.browser.js","components/FormSearchVin/FormSearchVin.jsx","components/VinList/VinList.jsx","components/VinCodeList/VinCodeList.jsx","pages/General/General.jsx","services/getSearchVin.jsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\n\nconst navItems = [\n    { href: '/', text: 'General' },\n    { href: '/variables', text: 'Variables' },\n  ];\n  \n  const AppBar = () => {\n      return (\n          <header>\n              <ul>\n                  {navItems.map(({ href, text }) => {\n                      if(href.includes(\"/variables\")) {\n                          return (\n                              <li key={href}>\n                                  <NavLink to={href}>{text}</NavLink>\n                              </li>\n                          )\n                      }    \n  \n                      return (\n                          <li key={href}>\n                              <NavLink to={href} end>{text}</NavLink>\n                          </li>\n                      )\n                  })}\n              </ul>\n          </header>\n      )\n  }\n  \n  export default AppBar;","import { MagnifyingGlass } from  'react-loader-spinner';\n\nconst Loader = () => {\n    return (    \n        <div>\n        <MagnifyingGlass \n            visible={true} \n            height=\"100\" \n            width=\"100\"\n            color='black'\n        />\n        </div>\n    )\n}\n\nexport default Loader;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst FormSearchVin = ({ onSubmit, add }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [code, setCode] = useState('');\n\n  const handleSearchQuery = e => {\n    setSearchQuery(e.currentTarget.value.toLowerCase().trim());\n    setCode(e.target.value)\n\n\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const validationQuery = searchQuery.trim();\n    if (validationQuery === '') {\n      toast.error('Please enter a VIN code!');\n      return;\n    } else if (validationQuery.length < 17) {\n      toast.error('Please enter 17 character code');\n      return;\n    }\n\n    onSubmit(searchQuery);\n    add({code});\n    \n    resetForm();\n  };\n\n  const resetForm = () => {\n    setSearchQuery('');\n    setCode('')\n  };\n  console.log(searchQuery);\n  return (\n      <>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Enter VIN\"\n            onChange={handleSearchQuery}\n            name=\"searchQuery\"\n            value={searchQuery}\n            // pattern= \"/[^a-zA-Z0-9]/\"\n          />\n          <button type=\"submit\">Send</button>\n        </form>\n      </>\n  );\n};\n\nFormSearchVin.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default FormSearchVin;\n","import PropTypes from 'prop-types';\n\nconst VinList = ({ items }) => {\n  const item = items.data.Results;\n\n  return (\n    <ul>\n      {item.map(\n        ({ Value, Variable, VariableId }) =>\n          Value !== null &&\n          Value !== '' &&\n          Value !== '0' && (\n            <li key={VariableId}>\n              <p>\n                {Value} : {Variable}\n              </p>\n            </li>\n          )\n      )}\n    </ul>\n  );\n};\n\nVinList.propTypes = {\n  items: PropTypes.object.isRequired,\n};\n\nexport default VinList;\n","\nconst VinCodeList = ({ codes }) => {\n  console.log(codes);\n  return (\n    <div>\n        <h2>List codes</h2>\n    <ul>\n      {codes.slice(0, 5).map(({ code, id }) => (\n        <li key={id}>\n          <p>VIN code : {code}</p>\n        </li>\n      ))}\n    </ul>\n    </div>\n  );\n};\n\nexport default VinCodeList;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport AppBar from 'components/AppBar/AppBar';\nimport FormSearchVin from 'components/FormSearchVin/FormSearchVin';\nimport VinList from 'components/VinList/VinList';\nimport Loader from 'components/Loader/Loader';\nimport { getSearchVin } from 'services/getSearchVin';\nimport VinCodeList from 'components/VinCodeList/VinCodeList';\n\nconst GeneralPage = () => {\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [codes, setCodes] = useState(\n    JSON.parse(localStorage.getItem('codes')) ?? []\n  );\n\n  useEffect(() => {\n    window.localStorage.setItem('codes', JSON.stringify(codes));\n  }, [codes]);\n\n  const addCode = data => {\n    const code = {\n      id: nanoid(),\n      code: data.code,\n    };\n    setCodes(prevState => [code, ...prevState]);\n    console.log(code);\n  };\n\n  const vin = searchParams.get('vin');\n\n  const onChangeQuery = vin => {\n    setSearchParams({ vin: vin });\n    setItems([]);\n  };\n\n  useEffect(() => {\n    const getSearchQuery = async () => {\n      if (!vin) {\n        return;\n      }\n      setIsLoading(true);\n\n      try {\n        const data = await getSearchVin({ vin });\n        setItems(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getSearchQuery();\n  }, [vin]);\n  console.log(codes);\n  return (\n    <>\n      <AppBar />\n      <FormSearchVin onSubmit={onChangeQuery} add={addCode} />\n      {codes.length !== 0 && <VinCodeList codes={codes} />}\n      {items.length !== 0 && (\n        <div>\n          <VinList items={items} />\n        </div>\n      )}\n      {isLoading && <Loader />}\n      {error && <p>Please try again later!</p>}\n    </>\n  );\n};\n\nexport default GeneralPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://vpic.nhtsa.dot.gov/api';\n\nexport const getSearchVin = async ({ vin = '' }) => {\n  const result = await axios.get(\n    `${BASE_URL}/vehicles/decodevin/${vin}?format=json`\n  );\n  return result;\n};\n\nexport const getSearchVariablesList = async () => {\n  const result = await axios.get(\n    `${BASE_URL}/vehicles/getvehiclevariablelist?format=json`\n  );\n  return result;\n};\n\nexport const getVariableDescription = async({variableId} ) => {\n  const result = await axios.get(`https://vpic.nhtsa.dot.gov/api/vehicles/getvehiclevariablevalueslist/${variableId}?format=json`);\n  return result;\n};\n"],"names":["navItems","href","text","map","includes","to","end","visible","height","width","color","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","onSubmit","add","useState","searchQuery","setSearchQuery","code","setCode","resetForm","console","log","e","preventDefault","validationQuery","trim","length","toast","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","target","name","item","items","data","Results","Value","Variable","VariableId","codes","slice","setItems","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","JSON","parse","localStorage","getItem","setCodes","useEffect","window","setItem","stringify","vin","get","getSearchQuery","getSearchVin","AppBar","prevState","Loader","BASE_URL","axios","result","getSearchVariablesList","getVariableDescription","variableId"],"sourceRoot":""}